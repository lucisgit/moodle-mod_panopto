{"version":3,"sources":["../src/getauth.js"],"names":["define","$","ajax","notification","str","templates","ModalFactory","getAuthUrl","contextId","panoptoId","request","call","methodname","args","contextid","panoptoid","done","authUrl","val","window","location","replace","setTimeout","fail","exception","get_string","errorcode","message","replaceWith","addClass","init","context","id","width","trigger","title","create","body","render","type","types","DEFAULT","large","modal","getRoot","find","css"],"mappings":"AA2BAA,OAAM,uBACF,CACI,QADJ,CAEI,WAFJ,CAGI,mBAHJ,CAII,UAJJ,CAKI,gBALJ,CAMI,oBANJ,CADE,CASF,SAASC,CAAT,CAAYC,CAAZ,CAAkBC,CAAlB,CAAgCC,CAAhC,CAAqCC,CAArC,CAAgDC,CAAhD,CAA8D,CAQ1D,QAASC,CAAAA,CAAT,CAAoBC,CAApB,CAA+BC,CAA/B,CAA0C,CACtC,GAAIC,CAAAA,CAAO,CAAGR,CAAI,CAACS,IAAL,CAAU,CAAC,CACrBC,UAAU,CAAE,sBADS,CAErBC,IAAI,CAAE,CACFC,SAAS,CAAEN,CADT,CAEFO,SAAS,CAAEN,CAFT,CAFe,CAAD,CAAV,CAAd,CAQAC,CAAO,CAAC,CAAD,CAAP,CAAWM,IAAX,CAAgB,SAASC,CAAT,CAAkB,CAC9B,GAAIA,CAAJ,CAAa,CACThB,CAAC,CAAC,uBAAD,CAAD,CAA2BiB,GAA3B,CAA+B,GAA/B,EACAC,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwBJ,CAAxB,CACH,CAEDK,UAAU,CAAC,UAAW,CAClBf,CAAU,CAACC,CAAD,CAAYC,CAAZ,CACb,CAFS,CAEP,GAFO,CAGb,CATD,EASGc,IATH,CASQ,SAASC,CAAT,CAAoB,CACxBpB,CAAG,CAACqB,UAAJ,CAAeD,CAAS,CAACE,SAAzB,CAAoC,aAApC,EAAmDV,IAAnD,CAAwD,SAASW,CAAT,CAAkB,CACtE1B,CAAC,CAAC,mBAAD,CAAD,CAAuB2B,WAAvB,CAAmCD,CAAnC,EACA1B,CAAC,CAAC,uBAAD,CAAD,CAA2B4B,QAA3B,CAAoC,mBAApC,CACH,CAHD,EAGGN,IAHH,CAGQpB,CAAY,CAACqB,SAHrB,CAIH,CAdD,CAeH,CAED,MAAO,CAOHM,IAAI,CAAE,cAAStB,CAAT,CAAoBC,CAApB,CAA+B,CAEjCF,CAAU,CAACC,CAAD,CAAYC,CAAZ,CAAV,CAEA,GAAIsB,CAAAA,CAAO,CAAG,CACVC,EAAE,CAAE,kBADM,CAEVC,KAAK,CAAE,GAFG,CAAd,CAIIC,CAAO,CAAGjC,CAAC,CAAC,eAAD,CAJf,CAMAG,CAAG,CAACqB,UAAJ,CAAe,WAAf,CAA4B,aAA5B,EAA2CT,IAA3C,CAAgD,SAASmB,CAAT,CAAgB,CAC5D7B,CAAY,CAAC8B,MAAb,CAAoB,CAChBD,KAAK,CAAEA,CADS,CAEhBE,IAAI,CAAEhC,CAAS,CAACiC,MAAV,CAAiB,sBAAjB,CAAyCP,CAAzC,CAAkD,EAAlD,CAFU,CAGhBQ,IAAI,CAAEjC,CAAY,CAACkC,KAAb,CAAmBC,OAHT,CAIhBC,KAAK,GAJW,CAApB,CAKGR,CALH,EAKYlB,IALZ,CAKiB,SAAS2B,CAAT,CAAgB,CAC7BA,CAAK,CAACC,OAAN,GAAgBC,IAAhB,CAAqB,eAArB,EAAsCC,GAAtC,CAA0C,CAAC,MAAS,OAAV,CAAmB,aAAc,OAAjC,CAA1C,EAEAZ,CAAO,CAACA,OAAR,CAAgB,OAAhB,CACH,CATD,EASGX,IATH,CASQpB,CAAY,CAACqB,SATrB,CAUH,CAXD,EAWGD,IAXH,CAWQpB,CAAY,CAACqB,SAXrB,CAYH,CA7BE,CAgCV,CA3EC,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Polls a web service to obtain a Panopto auth url and redirect the user,\n * and displays a modal with a progress bar while the user is waiting.\n *\n * See templates:   mod_panopto/progress\n *\n * @module      mod_panopto/getauth\n * @class       getauth\n * @package     mod_panopto\n * @copyright   2020 Tony Butler <a.butler4@lancaster.ac.uk>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(\n    [\n        'jquery',\n        'core/ajax',\n        'core/notification',\n        'core/str',\n        'core/templates',\n        'core/modal_factory'\n    ],\n    function($, ajax, notification, str, templates, ModalFactory) {\n\n        /**\n         * Polls a web service method via AJAX for a Panopto auth url, then redirects to it.\n         *\n         * @param {number} contextId The context id of the Panopto instance.\n         * @param {number} panoptoId The instance id of the Panopto instance.\n         */\n        function getAuthUrl(contextId, panoptoId) {\n            var request = ajax.call([{\n                methodname: 'mod_panopto_get_auth',\n                args: {\n                    contextid: contextId,\n                    panoptoid: panoptoId\n                }\n            }]);\n\n            request[0].done(function(authUrl) {\n                if (authUrl) {\n                    $('#panopto_progress_bar').val(100);\n                    window.location.replace(authUrl);\n                }\n                // Wait a sec ...\n                setTimeout(function() {\n                    getAuthUrl(contextId, panoptoId);\n                }, 1000);\n            }).fail(function(exception) {\n                str.get_string(exception.errorcode, 'mod_panopto').done(function(message) {\n                    $('#panopto_progress').replaceWith(message);\n                    $('.mod_panopto_progress').addClass('alert-warning p-2');\n                }).fail(notification.exception);\n            });\n        }\n\n        return {\n            /**\n             * Init function.\n             *\n             * @param {number} contextId The context id of the Panopto instance.\n             * @param {number} panoptoId The instance id of the Panopto instance.\n             */\n            init: function(contextId, panoptoId) {\n                // Start polling for an auth url.\n                getAuthUrl(contextId, panoptoId);\n\n                var context = {\n                    id: 'panopto_progress',\n                    width: 350\n                },\n                    trigger = $('#panopto_info');\n\n                str.get_string('preparing', 'mod_panopto').done(function(title) {\n                    ModalFactory.create({\n                        title: title,\n                        body: templates.render('mod_panopto/progress', context, ''),\n                        type: ModalFactory.types.DEFAULT,\n                        large: false\n                    }, trigger).done(function(modal) {\n                        modal.getRoot().find('.modal-dialog').css({'width': '400px', 'margin-top': '20rem'});\n                        // Launch modal.\n                        trigger.trigger('click');\n                    }).fail(notification.exception);\n                }).fail(notification.exception);\n            }\n        };\n\n    }\n);\n"],"file":"getauth.min.js"}