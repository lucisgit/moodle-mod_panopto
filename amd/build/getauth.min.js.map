{"version":3,"file":"getauth.min.js","sources":["../src/getauth.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Polls a web service to obtain a Panopto auth url and redirect the user,\n * and displays a modal with a progress bar while the user is waiting.\n *\n * See templates:   mod_panopto/progress\n *\n * @module      mod_panopto/getauth\n * @class       getauth\n * @copyright   2020 Tony Butler <a.butler4@lancaster.ac.uk>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(\n    [\n        'jquery',\n        'core/ajax',\n        'core/notification',\n        'core/str',\n        'core/templates',\n        'core/modal_factory'\n    ],\n    function($, ajax, notification, str, templates, ModalFactory) {\n\n        /**\n         * Polls a web service method via AJAX for a Panopto auth url, then redirects to it.\n         *\n         * @param {number} contextId The context id of the Panopto instance.\n         * @param {number} panoptoId The instance id of the Panopto instance.\n         */\n        function getAuthUrl(contextId, panoptoId) {\n            var request = ajax.call([{\n                methodname: 'mod_panopto_get_auth',\n                args: {\n                    contextid: contextId,\n                    panoptoid: panoptoId\n                }\n            }]);\n\n            request[0].done(function(authUrl) {\n                if (authUrl) {\n                    $('#panopto_progress_bar').val(100);\n                    window.location.replace(authUrl);\n                }\n                // Wait a sec ...\n                setTimeout(function() {\n                    getAuthUrl(contextId, panoptoId);\n                }, 1000);\n            }).fail(function(exception) {\n                str.get_string(exception.errorcode, 'mod_panopto').done(function(message) {\n                    $('#panopto_progress').replaceWith(message);\n                    $('.mod_panopto_progress').addClass('alert-warning p-2');\n                }).fail(notification.exception);\n            });\n        }\n\n        return {\n            /**\n             * Init function.\n             *\n             * @param {number} contextId The context id of the Panopto instance.\n             * @param {number} panoptoId The instance id of the Panopto instance.\n             */\n            init: function(contextId, panoptoId) {\n                // Start polling for an auth url.\n                getAuthUrl(contextId, panoptoId);\n\n                var context = {\n                    id: 'panopto_progress',\n                    width: 350\n                },\n                    trigger = $('#panopto_info');\n\n                str.get_string('preparing', 'mod_panopto').done(function(title) {\n                    ModalFactory.create({\n                        title: title,\n                        body: templates.render('mod_panopto/progress', context, ''),\n                        type: ModalFactory.types.DEFAULT,\n                        large: false\n                    }, trigger).done(function(modal) {\n                        modal.getRoot().find('.modal-dialog').css({'width': '400px', 'margin-top': '20rem'});\n                        // Launch modal.\n                        trigger.trigger('click');\n                    }).fail(notification.exception);\n                }).fail(notification.exception);\n            }\n        };\n\n    }\n);\n"],"names":["define","$","ajax","notification","str","templates","ModalFactory","getAuthUrl","contextId","panoptoId","call","methodname","args","contextid","panoptoid","done","authUrl","val","window","location","replace","setTimeout","fail","exception","get_string","errorcode","message","replaceWith","addClass","init","context","id","width","trigger","title","create","body","render","type","types","DEFAULT","large","modal","getRoot","find","css"],"mappings":";;;;;;;;;;;AA0BAA,6BACI,CACI,SACA,YACA,oBACA,WACA,iBACA,uBAEJ,SAASC,EAAGC,KAAMC,aAAcC,IAAKC,UAAWC,uBAQnCC,WAAWC,UAAWC,WACbP,KAAKQ,KAAK,CAAC,CACrBC,WAAY,uBACZC,KAAM,CACFC,UAAWL,UACXM,UAAWL,cAIX,GAAGM,MAAK,SAASC,SACjBA,UACAf,EAAE,yBAAyBgB,IAAI,KAC/BC,OAAOC,SAASC,QAAQJ,UAG5BK,YAAW,WACPd,WAAWC,UAAWC,aACvB,QACJa,MAAK,SAASC,WACbnB,IAAIoB,WAAWD,UAAUE,UAAW,eAAeV,MAAK,SAASW,SAC7DzB,EAAE,qBAAqB0B,YAAYD,SACnCzB,EAAE,yBAAyB2B,SAAS,wBACrCN,KAAKnB,aAAaoB,oBAItB,CAOHM,KAAM,SAASrB,UAAWC,WAEtBF,WAAWC,UAAWC,eAElBqB,QAAU,CACVC,GAAI,mBACJC,MAAO,KAEPC,QAAUhC,EAAE,iBAEhBG,IAAIoB,WAAW,YAAa,eAAeT,MAAK,SAASmB,OACrD5B,aAAa6B,OAAO,CAChBD,MAAOA,MACPE,KAAM/B,UAAUgC,OAAO,uBAAwBP,QAAS,IACxDQ,KAAMhC,aAAaiC,MAAMC,QACzBC,OAAO,GACRR,SAASlB,MAAK,SAAS2B,OACtBA,MAAMC,UAAUC,KAAK,iBAAiBC,IAAI,OAAU,qBAAuB,UAE3EZ,QAAQA,QAAQ,YACjBX,KAAKnB,aAAaoB,cACtBD,KAAKnB,aAAaoB"}